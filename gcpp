#!/bin/bash

# This script is used in repo github.com/lxvs/cpp
# Author:        lxvs <jn.apsd+batch@gmail.com>
# Last updated:  2021-04-27
# Usage: cpp <operation> [<argument> ...]
#
#    Operation: init, cl, edit, clean
#
# cpp init <chapter> <number-of-exercises>
#
#    init a new chapter (e.g. ch.6, having 18 exercises) by:
#        creating the folder ch-6
#        copying TEMPLATE to ch-6\6-1.c, ch-6\6-2.c, ..., ch-6\6-18.c
#
#    errorlevel value returned
#    0           0x00        exit expectedly
#    33          0x21        number of exercises is not provided
#    34/35       0x22/0x23   chapter number is too low/ too high
#    36/37       0x24/0x25   exercise number is too low/ too high
#    38          0x26        file TEMPLATE does not exist
#
# cpp gcc <chapter> <exercise> [ r[un] [ c[lean] ] ]
#
#    Build ch-<chapter>\<chapter>-<exercise>.c
#
#    If "run" is specified, run it if built successfully
#    If "clean" is specified, delete generated .exe and .obj files
#    You can use "rc" to specify run and clean
#
#    errorlevel value returned
#    0           0x00        exit expectedly
#    65          0x41        number of exercises is not provided
#    66/67       0x42/0x43   chapter number is too low/ too high
#    68/69       0x44/0x45   exercise number is too low/ too high
#    71          0x47        the specified C file does not exist
#
# cpp edit <chapter> [ <exercise> | n[ext] ] [<editor>]
#
#    Use <editor> to edit ch-<chapter>\<chapter>-<exercise>.c
#
#    If "next" is specified, will open the first C file different
#        from TEMPLATE. If all C files are different from TEMPLATE,
#        will create a new C file of next exercise from TEMPLATE and
#        open it with <editor>
#    If <exercise> and "next" are both omitted, "next" is implied
#    If <editor> is omitted, will use DEFAULT_EDITOR (default is Vim)
#
#    errorlevel value returned
#    0           0x00        exit expectedly
#    96          0x60        chapter is not provided
#    97          0x61        exercise provided is invalid
#    98/99       0x62/0x63   chapter number is too low/ too high
#    100/101     0x64/0x65   exercise number is too low/ too high
#    102         0x66        file TEMPLATE does not exist
#    103         0x67        the number of existed exercises is MAX_EX
#    104         0x68        editor provided or DEFAULT_EDITOR is invalid
#
# cpp clean [ n | dry ]
#
#    clean C files that are same with TEMPLATE
#
#    If "dry" or "n" is specified, won't actually delete anything, just
#        show what would be done
#
#    errorlevel value returned
#    0           0x00        exit expectedly
#    128         0x80        argument provided is invalid



if [[ $# -eq 0 ]]; then
    echo "Error: no operation provided" >&2
    echo "Read this script in editor for detailed usage" >&2
    exit 1
fi

[[ -z ${MIN_CH+set} ]] && declare -i MIN_CH=1
[[ -z ${MAX_CH+set} ]] && declare -i MAX_CH=17
[[ -z ${MIN_EX+set} ]] && declare -i MIN_EX=1
[[ -z ${MAX_EX+set} ]] && declare -i MAX_EX=99

[[ -z ${TEMPLATE+set} ]] && TEMPLATE="template.c"
[[ -z ${DEFAULT_EDITOR+set} ]] && DEFAULT_EDITOR=vim

function Operate {
    case $1 in
        "init")
            [[ $# -eq 3 ]] || return 33
            [[ $2 -lt $MIN_CH ]] && return 34
            [[ $2 -gt $MAX_CH ]] && return 35
            [[ $3 -lt $MIN_EX ]] && return 36
            [[ $3 -gt $MAX_EX ]] && return 37
            [[ -e $TEMPLATE ]] || return 38

            [[ -d ch-$2 ]] || mkdir ch-$2
            if [[ $? -ne 0 ]];then
                echo "gcpp-$1: failed to make directory 'ch-$2'"
                return
            fi

            pushd ch-$2 > /dev/null
            if [[ $? -ne 0 ]];then
                echo "gcpp-$1: failed to navigate to directory 'ch-$2'"
                return
            fi

            for ((ex=1;ex<=$3;ex++))
            do
                if [[ -e $2-$ex.c ]]; then
                    echo gcpp-$1: warning: $2-$ex.c exists, skipped.
                else
                    cp "../$TEMPLATE" $2-$ex.c && echo "gcpp-$1: $2-$ex.c copied." || echo "gcpp-$1: warning: failed to copy $2-$ex.c"
                fi
            done
            ;;

        "gcc")
            [[ $# -ge 3 ]] || return 65
            [[ $2 -lt $MIN_CH ]] && return 66
            [[ $2 -gt $MAX_CH ]] && return 67
            [[ $3 -lt $MIN_EX ]] && return 68
            [[ $3 -gt $MAX_EX ]] && return 69
            [[ -e ch-$2/$2-$3.c ]] || return 71

            run=$4
            cln=$5

            if [[ $run == "rc" && -z $cln ]]; then
                run="run"
                cln="clean"
            else
                [[ $run == "r" ]] && run="run"
                [[ $cln == "c" ]] && cln="clean"
            fi

            out=./$2-$3.out
            gcc ch-$2/$2-$3.c -o $out

            # FIXME: must include -lm parameter to complie c files with math.h

            if [[ $? -eq 0 ]]; then
                if [[ $run == "run" ]]; then
                    chmod +x $out
                    $out
                    local out_err=$?
                    [[ $out_err -ne 0 ]] && echo "gcpp-$1: $2-$3 returns $out_err"
                fi
                [[ $cln == "clean" ]] && rm -f $out ./$2-$3.obj
            else
                return
            fi

            ;;

        "edit")

            [[ $# -ge 2 ]] || return 96
            [[ -e $TEMPLATE ]] || return 102

            if [[ $3 == "" || $3 == "n" ]]; then
                local ex="next"
            elif [[ $3 != "next" ]]; then
                declare -i ex=$3
                [[ $ex == $3 ]] || return 97
            fi

            [[ $2 -ge $MIN_CH ]] || return 98
            [[ $2 -le $MAX_CH ]] || return 99

            if [[ ! -d ch-$2 ]]; then
                mkdir ch-$2
                [[ $? -eq 0 ]] || return
            fi

            local fte   # file to edit
            local editor
            if [[ $ex == "next" ]]; then
                # FIXME
                echo "Sorry! 'next' argument is under development!"
                echo "Please specify the exercise number for now."
                return 127
            else
                [[ $ex -ge $MIN_EX ]] || return 100
                [[ $ex -le $MAX_EX ]] || return 101
                fte="ch-$2/$2-$3.c"
            fi

            if [[ ! -e $fte ]]; then
                echo "gcpp-$1: would create file $fte"
                cp $TEMPLATE $fte 1>/dev/null
                if [[ $? -ne 0 ]]; then
                    echo "gcpp-$1: failed to copy $TEMPLATE to $fte"
                    return
                fi
            fi

            editor=${4:-$DEFAULT_EDITOR}

            which $editor 1>/dev/null 2>&1 && $editor $fte || return 104

            return 0

            ;;

        "clean")

            local dry

            if [[ ! -z ${2+set} ]]; then
                [[ $2 == "n" || $2 == "dry" ]] && $dry="dry" || return 128
            fi

            for i in $(ls -d ch-* 2>/dev/null)
            do
                for j in $(ls $i/*.c 2>/dev/null)
                do
                    if cmp -s "$TEMPLATE" "$j"; then
                        if [[ $dry == "" ]]; then
                            rm -f "$j" 1>/dev/null
                            echo "Deleted $j"
                        else
                            echo "Would delete $j"
                        fi
                    fi
                done
                if [[ $dry == "" ]]; then
                    rmdir $i 2>/dev/null && echo "Removed $i"
                fi
            done

            return 0

            ;;

        *)  return 255
            ;;
    esac
}

declare -i errlvl=0

case $1 in
    "init"|"gcc"|"edit"|"clean")
        Operate $@
        errlvl=$?
        ;;
    *)  echo "gcpp: invalid operation: $1"
        exit 1
        ;;
esac

[[ $errlvl -ne 0 ]] && echo "gcpp: warning: script ended with error $errlvl"
exit $errlvl
